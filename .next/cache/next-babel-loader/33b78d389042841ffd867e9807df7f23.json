{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sis075/Documents/signature/components/drawIt.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nvar DrawIt =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DrawIt, _React$Component);\n\n  function DrawIt(props) {\n    var _this;\n\n    _classCallCheck(this, DrawIt);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DrawIt).call(this, props));\n    _this.state = {\n      name: '',\n      initialsName: '',\n      nameFont: ''\n    };\n    return _this;\n  }\n\n  _createClass(DrawIt, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, __jsx(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        className: \"text-center\",\n        style: {\n          marginBottom: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Create your Signature\"))), __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Draw Signature\")), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, __jsx(SignatureCanvas, {\n        penColor: \"black\",\n        backgroundColor: \"#CCCCCC\",\n        canvasProps: {\n          width: 700,\n          height: 150,\n          className: 'sigCanvas'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Draw Initials\")), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(SignatureCanvas, {\n        penColor: \"black\",\n        backgroundColor: \"#CCCCCC\",\n        canvasProps: {\n          width: 250,\n          height: 150,\n          className: 'sigCanvas'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"By clicking Accept and Sign, I agree that the signature wil be the electric representation of my signature for all purposewhen I for my agend use themon documents. Including legallybinding documnets, just the same as pen and paper signature.\", ' '))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(Button, {\n        color: \"primary float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Accept and Sign\")))));\n    }\n  }]);\n\n  return DrawIt;\n}(React.Component);\n\nexport default DrawIt;","map":{"version":3,"sources":["/home/sis075/Documents/signature/components/drawIt.js"],"names":["React","Button","Form","FormGroup","Label","Input","Row","Col","DrawIt","props","state","name","initialsName","nameFont","marginBottom","width","height","className","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,GAAhD,EAAqDC,GAArD,QAAgE,YAAhE;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,YAAY,EAAE,EAFH;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAFiB;AAOlB;;;;6BACQ;AACP,aACE,4BACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAA4B,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF,CADF,EAQE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,EAIE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,eAAD;AACE,QAAA,QAAQ,EAAC,OADX;AAEE,QAAA,eAAe,EAAC,SAFlB;AAGE,QAAA,WAAW,EAAE;AACXC,UAAAA,KAAK,EAAE,GADI;AAEXC,UAAAA,MAAM,EAAE,GAFG;AAGXC,UAAAA,SAAS,EAAE;AAHA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAJF,EAiBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAjBF,EAoBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,eAAD;AACE,QAAA,QAAQ,EAAC,OADX;AAEE,QAAA,eAAe,EAAC,SAFlB;AAGE,QAAA,WAAW,EAAE;AACXF,UAAAA,KAAK,EAAE,GADI;AAEXC,UAAAA,MAAM,EAAE,GAFG;AAGXC,UAAAA,SAAS,EAAE;AAHA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CApBF,EAiCE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8PAIuD,GAJvD,CADF,CADF,CAjCF,EA2CE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CA3CF,CARF,CADF;AA4DD;;;;EAtEkBjB,KAAK,CAACkB,S;;AAyE3B,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nclass DrawIt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      initialsName: '',\n      nameFont: ''\n    };\n  }\n  render() {\n    return (\n      <>\n        <Row>\n          <Col sm=\"12\">\n            <h2 className=\"text-center\" style={{ marginBottom: '30px' }}>\n              Create your Signature\n            </h2>\n          </Col>\n        </Row>\n        <Form>\n          <Row>\n            <Col>Draw Signature</Col>\n          </Row>\n          <Row>\n            <Col>\n              <SignatureCanvas\n                penColor=\"black\"\n                backgroundColor=\"#CCCCCC\"\n                canvasProps={{\n                  width: 700,\n                  height: 150,\n                  className: 'sigCanvas'\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>Draw Initials</Col>\n          </Row>\n          <Row>\n            <Col>\n              <SignatureCanvas\n                penColor=\"black\"\n                backgroundColor=\"#CCCCCC\"\n                canvasProps={{\n                  width: 250,\n                  height: 150,\n                  className: 'sigCanvas'\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <p>\n                By clicking Accept and Sign, I agree that the signature wil be\n                the electric representation of my signature for all purposewhen\n                I for my agend use themon documents. Including legallybinding\n                documnets, just the same as pen and paper signature.{' '}\n              </p>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button color=\"primary float-right\">Accept and Sign</Button>\n            </Col>\n          </Row>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default DrawIt;\n"]},"metadata":{},"sourceType":"module"}