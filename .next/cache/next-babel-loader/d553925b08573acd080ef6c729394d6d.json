{"ast":null,"code":"var _jsxFileName = \"/home/sis075/Documents/signature/components/drawIt.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport SignatureCanvas from 'react-signature-canvas';\n\nclass DrawIt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      initialsName: '',\n      nameFont: ''\n    };\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(Row, {\n      style: {\n        marginBottom: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, __jsx(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Draw Signature\")), __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(SignatureCanvas, {\n      ref: this.props.dataRef,\n      penColor: \"black\",\n      backgroundColor: \"#CCCCCC\",\n      canvasProps: {\n        width: 700,\n        height: 150,\n        className: 'sigCanvas'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }))), __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Draw Initials\")), __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(SignatureCanvas, {\n      penColor: \"black\",\n      backgroundColor: \"#CCCCCC\",\n      canvasProps: {\n        width: 250,\n        height: 150,\n        className: 'sigCanvas'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"By clicking Accept and Sign, I agree that the signature wil be the electric representation of my signature for all purposewhen I for my agend use themon documents. Including legallybinding documnets, just the same as pen and paper signature.\", ' '))), __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(Button, {\n      color: \"primary float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Accept and Sign\")))));\n  }\n\n}\n\nexport default DrawIt;","map":{"version":3,"sources":["/home/sis075/Documents/signature/components/drawIt.js"],"names":["React","Button","Form","FormGroup","Label","Input","Row","Col","SignatureCanvas","DrawIt","Component","constructor","props","state","name","initialsName","nameFont","render","marginBottom","dataRef","width","height","className"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,GAAhD,EAAqDC,GAArD,QAAgE,YAAhE;AACA,OAAOC,eAAP,MAA4B,wBAA5B;;AAEA,MAAMC,MAAN,SAAqBT,KAAK,CAACU,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,YAAY,EAAE,EAFH;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,eAAD;AACE,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWO,OADlB;AAEE,MAAA,QAAQ,EAAC,OAFX;AAGE,MAAA,eAAe,EAAC,SAHlB;AAIE,MAAA,WAAW,EAAE;AACXC,QAAAA,KAAK,EAAE,GADI;AAEXC,QAAAA,MAAM,EAAE,GAFG;AAGXC,QAAAA,SAAS,EAAE;AAHA,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAJF,EAkBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAlBF,EAqBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,eAAD;AACE,MAAA,QAAQ,EAAC,OADX;AAEE,MAAA,eAAe,EAAC,SAFlB;AAGE,MAAA,WAAW,EAAE;AACXF,QAAAA,KAAK,EAAE,GADI;AAEXC,QAAAA,MAAM,EAAE,GAFG;AAGXC,QAAAA,SAAS,EAAE;AAHA,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CArBF,EAkCE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4PAIuD,GAJvD,CADF,CADF,CAlCF,EA4CE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,CA5CF,CADF,CADF;AAsDD;;AAhEkC;;AAmErC,eAAeb,MAAf","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport SignatureCanvas from 'react-signature-canvas';\n\nclass DrawIt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      initialsName: '',\n      nameFont: ''\n    };\n  }\n  render() {\n    return (\n      <>\n        <Form>\n          <Row style={{ marginBottom: '30px' }}>\n            <Col>Draw Signature</Col>\n          </Row>\n          <Row>\n            <Col>\n              <SignatureCanvas\n                ref={this.props.dataRef}\n                penColor=\"black\"\n                backgroundColor=\"#CCCCCC\"\n                canvasProps={{\n                  width: 700,\n                  height: 150,\n                  className: 'sigCanvas'\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>Draw Initials</Col>\n          </Row>\n          <Row>\n            <Col>\n              <SignatureCanvas\n                penColor=\"black\"\n                backgroundColor=\"#CCCCCC\"\n                canvasProps={{\n                  width: 250,\n                  height: 150,\n                  className: 'sigCanvas'\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <p>\n                By clicking Accept and Sign, I agree that the signature wil be\n                the electric representation of my signature for all purposewhen\n                I for my agend use themon documents. Including legallybinding\n                documnets, just the same as pen and paper signature.{' '}\n              </p>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button color=\"primary float-right\">Accept and Sign</Button>\n            </Col>\n          </Row>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default DrawIt;\n"]},"metadata":{},"sourceType":"module"}