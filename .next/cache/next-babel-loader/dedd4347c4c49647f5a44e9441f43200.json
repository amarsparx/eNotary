{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/sis075/Documents/signature/components/typeItIn.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nvar TypeItIn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TypeItIn, _React$Component);\n\n  function TypeItIn(props) {\n    var _this;\n\n    _classCallCheck(this, TypeItIn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TypeItIn).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"nameHandler\", function (event) {\n      console.log(event.target.value, '[target]');\n\n      _this.setState({\n        name: event.target.value\n      });\n    });\n\n    _this.state = {\n      name: ''\n    };\n    return _this;\n  }\n\n  _createClass(TypeItIn, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, __jsx(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Create your Signature\"))), __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"confirm-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Confirm your name\"), __jsx(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"confirm-name\",\n        placeholder: \"Confirm your name\",\n        onChange: function onChange(event) {\n          return _this2.nameHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }))), __jsx(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"confirm-initials\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Confirm your initials\"), __jsx(Input, {\n        type: \"text\",\n        name: \"initials\",\n        id: \"confirm-initials\",\n        placeholder: \"Confirm your initials\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"confirm-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Preview\"))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        style: {\n          border: '12px solid #CCCCCC',\n          background: '#ffffff',\n          padding: '8px 15px',\n          display: 'block'\n        },\n        className: \"name-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Joseph Bisaillon\"))), __jsx(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        style: {\n          border: '12px solid #CCCCCC',\n          background: '#ffffff',\n          padding: '8px 15px',\n          display: 'inline-block'\n        },\n        className: \"initials-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"JB\")))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"By clicking Accept and Sign, I agree that the signature wil be the electric representation of my signature for all purposewhen I for my agend use themon documents. Including legallybinding documnets, just the same as pen and paper signature.\", ' '))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"change-font\",\n        style: {\n          flex: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Change Font:\"), __jsx(\"select\", {\n        className: \"form-control\",\n        style: {\n          flex: 9\n        },\n        id: \"change-font\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Man Salva\"), __jsx(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Times New Roman\"), __jsx(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Google Font #12\")))), __jsx(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Accept and Sign\"))))));\n    }\n  }]);\n\n  return TypeItIn;\n}(React.Component);\n\nexport default TypeItIn;","map":{"version":3,"sources":["/home/sis075/Documents/signature/components/typeItIn.js"],"names":["React","Button","Form","FormGroup","Label","Input","Row","Col","TypeItIn","props","event","console","log","target","value","setState","name","state","nameHandler","border","background","padding","display","flex","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nclass TypeItIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: ''\n    };\n  }\n  nameHandler = event => {\n    console.log(event.target.value, '[target]');\n    this.setState({ name: event.target.value });\n  };\n  render() {\n    return (\n      <>\n        <Row>\n          <Col sm=\"12\">\n            <h2 className=\"text-center\">Create your Signature</h2>\n          </Col>\n        </Row>\n        <Form>\n          <Row>\n            <Col>\n              <FormGroup>\n                <Label for=\"confirm-name\">Confirm your name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"confirm-name\"\n                  placeholder=\"Confirm your name\"\n                  onChange={event => this.nameHandler(event)}\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"4\">\n              <FormGroup>\n                <Label for=\"confirm-initials\">Confirm your initials</Label>\n                <Input\n                  type=\"text\"\n                  name=\"initials\"\n                  id=\"confirm-initials\"\n                  placeholder=\"Confirm your initials\"\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Label for=\"confirm-name\">Preview</Label>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <span\n                  style={{\n                    border: '12px solid #CCCCCC',\n                    background: '#ffffff',\n                    padding: '8px 15px',\n                    display: 'block'\n                  }}\n                  className=\"name-preview\"\n                >\n                  Joseph Bisaillon\n                </span>\n              </FormGroup>\n            </Col>\n            <Col sm=\"4\">\n              <FormGroup>\n                <span\n                  style={{\n                    border: '12px solid #CCCCCC',\n                    background: '#ffffff',\n                    padding: '8px 15px',\n                    display: 'inline-block'\n                  }}\n                  className=\"initials-preview\"\n                >\n                  JB\n                </span>\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <p>\n                By clicking Accept and Sign, I agree that the signature wil be\n                the electric representation of my signature for all purposewhen\n                I for my agend use themon documents. Including legallybinding\n                documnets, just the same as pen and paper signature.{' '}\n              </p>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <FormGroup style={{ display: 'flex' }}>\n                <Label for=\"change-font\" style={{ flex: 3 }}>\n                  Change Font:\n                </Label>\n                <select\n                  className=\"form-control\"\n                  style={{ flex: 9 }}\n                  id=\"change-font\"\n                >\n                  <option>Man Salva</option>\n                  <option>Times New Roman</option>\n                  <option>Google Font #12</option>\n                </select>\n              </FormGroup>\n            </Col>\n            <Col sm=\"4\">\n              <FormGroup>\n                <Button color=\"primary\">Accept and Sign</Button>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default TypeItIn;\n"]},"metadata":{},"sourceType":"module"}