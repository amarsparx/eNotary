{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sis075/Documents/signature/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Container, Row, Col, TabContent, TabPane, ListGroup, ListGroupItem, Form, Button } from 'reactstrap';\nimport classnames from 'classnames';\nimport Head from 'next/head';\nimport SignatureCanvas from 'react-signature-canvas';\nimport TypeItIn from '../components/typeItIn';\n\nvar Signature =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Signature, _React$Component);\n\n  function Signature(props) {\n    var _this;\n\n    _classCallCheck(this, Signature);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signature).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      activeTab: '1',\n      name: ''\n    };\n    return _this;\n  }\n\n  _createClass(Signature, [{\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('[name]', this.state.name);\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"/static/css/bootstrap.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(Col, {\n        xs: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(ListGroupItem, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('1');\n        },\n        tag: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Type it in\"), __jsx(ListGroupItem, {\n        tag: \"button\",\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Draw It\"))), __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __jsx(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(TypeItIn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), __jsx(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, __jsx(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Create your Signature\"))), __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Draw Signature\")), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, __jsx(SignatureCanvas, {\n        penColor: \"black\",\n        backgroundColor: \"#CCCCCC\",\n        canvasProps: {\n          width: 700,\n          height: 150,\n          className: 'sigCanvas'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Draw Initials\")), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(SignatureCanvas, {\n        penColor: \"black\",\n        backgroundColor: \"#CCCCCC\",\n        canvasProps: {\n          width: 250,\n          height: 150,\n          className: 'sigCanvas'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"By clicking Accept and Sign, I agree that the signature wil be the electric representation of my signature for all purposewhen I for my agend use themon documents. Including legallybinding documnets, just the same as pen and paper signature.\", ' '))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __jsx(Button, {\n        color: \"primary float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Accept and Sign\"))))))))));\n    }\n  }]);\n\n  return Signature;\n}(React.Component);\n\nexport default Signature;","map":{"version":3,"sources":["/home/sis075/Documents/signature/pages/index.js"],"names":["React","Container","Row","Col","TabContent","TabPane","ListGroup","ListGroupItem","Form","Button","classnames","Head","SignatureCanvas","TypeItIn","Signature","props","toggle","bind","state","activeTab","name","tab","setState","console","log","active","width","height","className","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  TabContent,\n  TabPane,\n  ListGroup,\n  ListGroupItem,\n  Form,\n  Button\n} from 'reactstrap';\nimport classnames from 'classnames';\n\nimport Head from 'next/head';\nimport SignatureCanvas from 'react-signature-canvas';\n\nimport TypeItIn from '../components/typeItIn';\n\nclass Signature extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1',\n      name: ''\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    console.log('[name]', this.state.name);\n    return (\n      <>\n        <Head>\n          <link rel=\"stylesheet\" href=\"/static/css/bootstrap.min.css\" />\n        </Head>\n\n        <Container>\n          <Row>\n            <Col xs=\"3\">\n              <ListGroup>\n                <ListGroupItem\n                  className={classnames({\n                    active: this.state.activeTab === '1'\n                  })}\n                  onClick={() => {\n                    this.toggle('1');\n                  }}\n                  tag=\"button\"\n                >\n                  Type it in\n                </ListGroupItem>\n                <ListGroupItem\n                  tag=\"button\"\n                  className={classnames({\n                    active: this.state.activeTab === '2'\n                  })}\n                  onClick={() => {\n                    this.toggle('2');\n                  }}\n                >\n                  Draw It\n                </ListGroupItem>\n              </ListGroup>\n            </Col>\n\n            {/* Tab Content column */}\n            <Col>\n              <TabContent activeTab={this.state.activeTab}>\n                <TabPane tabId=\"1\">\n                  <TypeItIn />\n                </TabPane>\n                <TabPane tabId=\"2\">\n                  <Row>\n                    <Col sm=\"12\">\n                      <h2 className=\"text-center\">Create your Signature</h2>\n                    </Col>\n                  </Row>\n                  <Form>\n                    <Row>\n                      <Col>Draw Signature</Col>\n                    </Row>\n\n                    <Row>\n                      <Col>\n                        <SignatureCanvas\n                          penColor=\"black\"\n                          backgroundColor=\"#CCCCCC\"\n                          canvasProps={{\n                            width: 700,\n                            height: 150,\n                            className: 'sigCanvas'\n                          }}\n                        />\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col>Draw Initials</Col>\n                    </Row>\n\n                    <Row>\n                      <Col>\n                        <SignatureCanvas\n                          penColor=\"black\"\n                          backgroundColor=\"#CCCCCC\"\n                          canvasProps={{\n                            width: 250,\n                            height: 150,\n                            className: 'sigCanvas'\n                          }}\n                        />\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col>\n                        <p>\n                          By clicking Accept and Sign, I agree that the\n                          signature wil be the electric representation of my\n                          signature for all purposewhen I for my agend use\n                          themon documents. Including legallybinding documnets,\n                          just the same as pen and paper signature.{' '}\n                        </p>\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col>\n                        <Button color=\"primary float-right\">\n                          Accept and Sign\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Form>\n                </TabPane>\n              </TabContent>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Signature;\n"]},"metadata":{},"sourceType":"module"}