{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sis075/Documents/signature/components/typeItIn.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nvar TypeItIn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TypeItIn, _React$Component);\n\n  function TypeItIn(props) {\n    var _this;\n\n    _classCallCheck(this, TypeItIn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TypeItIn).call(this, props));\n    _this.state = {\n      name: '',\n      initialsName: '',\n      nameFont: ''\n    };\n    return _this;\n  }\n\n  _createClass(TypeItIn, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, __jsx(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        className: \"text-center mb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Create your Signature\"))), __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"confirm-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Confirm your name\"), __jsx(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"confirm-name\",\n        placeholder: \"Confirm your name\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }))), __jsx(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"confirm-initials\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Confirm your initials\"), __jsx(Input, {\n        type: \"text\",\n        name: \"initials\",\n        id: \"confirm-initials\",\n        placeholder: \"Confirm your initials\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            initialsName: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"confirm-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Preview\"))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        style: {\n          border: '12px solid #CCCCCC',\n          background: '#ffffff',\n          padding: '8px 15px',\n          display: 'block',\n          fontWeight: 'bolder',\n          fontSize: '50px',\n          minHeight: '132px',\n          fontFamily: \"\".concat(this.state.nameFont)\n        },\n        className: \"name-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.name))), __jsx(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        style: {\n          border: '12px solid #CCCCCC',\n          background: '#ffffff',\n          padding: '8px 15px',\n          display: 'inline-block',\n          fontWeight: 'bolder',\n          fontSize: '50px',\n          minHeight: '132px',\n          minWidth: '200px',\n          fontFamily: \"\".concat(this.state.nameFont)\n        },\n        className: \"initials-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.initialsName)))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"By clicking Accept and Sign, I agree that the signature wil be the electric representation of my signature for all purposewhen I for my agend use themon documents. Including legallybinding documnets, just the same as pen and paper signature.\", ' '))), __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, __jsx(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"change-font\",\n        style: {\n          flex: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Change Font:\"), __jsx(\"select\", {\n        className: \"form-control\",\n        style: {\n          flex: 9\n        },\n        id: \"change-font\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            nameFont: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"Big Caslon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Big Caslon\"), __jsx(\"option\", {\n        value: \"Times New Roman\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Times New Roman\"), __jsx(\"option\", {\n        value: \"Arial\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Arial\"), __jsx(\"option\", {\n        value: \"Roboto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Roboto\"), __jsx(\"option\", {\n        value: \"Times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Times\"), __jsx(\"option\", {\n        value: \"Courier New\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Courier New\"), __jsx(\"option\", {\n        value: \"Georgia\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Georgia\"), __jsx(\"option\", {\n        value: \"Palatino\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Palatino\"), __jsx(\"option\", {\n        value: \"Garamond\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Garamond\"), __jsx(\"option\", {\n        value: \"Candara\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Candara\"), __jsx(\"option\", {\n        value: \"Arial Black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Arial Black\"), __jsx(\"option\", {\n        value: \"Impact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Impact\")))), __jsx(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, __jsx(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Accept and Sign\"))))));\n    }\n  }]);\n\n  return TypeItIn;\n}(React.Component);\n\nexport default TypeItIn;","map":{"version":3,"sources":["/home/sis075/Documents/signature/components/typeItIn.js"],"names":["React","Button","Form","FormGroup","Label","Input","Row","Col","TypeItIn","props","state","name","initialsName","nameFont","event","setState","target","value","border","background","padding","display","fontWeight","fontSize","minHeight","fontFamily","minWidth","flex","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nclass TypeItIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      initialsName: '',\n      nameFont: ''\n    };\n  }\n  render() {\n    return (\n      <>\n        <Row>\n          <Col sm=\"12\">\n            <h2 className=\"text-center mb\">Create your Signature</h2>\n          </Col>\n        </Row>\n        <Form>\n          <Row>\n            <Col>\n              <FormGroup>\n                <Label for=\"confirm-name\">Confirm your name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"confirm-name\"\n                  placeholder=\"Confirm your name\"\n                  onChange={event =>\n                    this.setState({ name: event.target.value })\n                  }\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"4\">\n              <FormGroup>\n                <Label for=\"confirm-initials\">Confirm your initials</Label>\n                <Input\n                  type=\"text\"\n                  name=\"initials\"\n                  id=\"confirm-initials\"\n                  placeholder=\"Confirm your initials\"\n                  onChange={event =>\n                    this.setState({ initialsName: event.target.value })\n                  }\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Label for=\"confirm-name\">Preview</Label>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <span\n                  style={{\n                    border: '12px solid #CCCCCC',\n                    background: '#ffffff',\n                    padding: '8px 15px',\n                    display: 'block',\n                    fontWeight: 'bolder',\n                    fontSize: '50px',\n                    minHeight: '132px',\n                    fontFamily: `${this.state.nameFont}`\n                  }}\n                  className=\"name-preview\"\n                >\n                  {this.state.name}\n                </span>\n              </FormGroup>\n            </Col>\n            <Col sm=\"4\">\n              <FormGroup>\n                <span\n                  style={{\n                    border: '12px solid #CCCCCC',\n                    background: '#ffffff',\n                    padding: '8px 15px',\n                    display: 'inline-block',\n                    fontWeight: 'bolder',\n                    fontSize: '50px',\n                    minHeight: '132px',\n                    minWidth: '200px',\n                    fontFamily: `${this.state.nameFont}`\n                  }}\n                  className=\"initials-preview\"\n                >\n                  {this.state.initialsName}\n                </span>\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <p>\n                By clicking Accept and Sign, I agree that the signature wil be\n                the electric representation of my signature for all purposewhen\n                I for my agend use themon documents. Including legallybinding\n                documnets, just the same as pen and paper signature.{' '}\n              </p>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <FormGroup style={{ display: 'flex' }}>\n                <Label for=\"change-font\" style={{ flex: 3 }}>\n                  Change Font:\n                </Label>\n                <select\n                  className=\"form-control\"\n                  style={{ flex: 9 }}\n                  id=\"change-font\"\n                  onChange={event =>\n                    this.setState({ nameFont: event.target.value })\n                  }\n                >\n                  <option value=\"Big Caslon\">Big Caslon</option>\n                  <option value=\"Times New Roman\">Times New Roman</option>\n                  <option value=\"Arial\">Arial</option>\n                  <option value=\"Roboto\">Roboto</option>\n                  <option value=\"Times\">Times</option>\n                  <option value=\"Courier New\">Courier New</option>\n                  <option value=\"Georgia\">Georgia</option>\n                  <option value=\"Palatino\">Palatino</option>\n                  <option value=\"Garamond\">Garamond</option>\n                  <option value=\"Candara\">Candara</option>\n                  <option value=\"Arial Black\">Arial Black</option>\n                  <option value=\"Impact\">Impact</option>\n                </select>\n              </FormGroup>\n            </Col>\n            <Col sm=\"4\">\n              <FormGroup>\n                <Button color=\"primary\">Accept and Sign</Button>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default TypeItIn;\n"]},"metadata":{},"sourceType":"module"}