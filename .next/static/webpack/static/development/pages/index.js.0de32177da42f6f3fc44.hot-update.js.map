{"version":3,"file":"static/webpack/static/development/pages/index.js.0de32177da42f6f3fc44.hot-update.js","sources":["webpack:///./components/typeItIn.js"],"sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nconst typeItIn = props => {\n  return (\n    <>\n      <Row>\n        <Col sm=\"12\">\n          <h2 className=\"text-center\" style={{ marginBottom: '30px' }}>\n            Create your Signature\n          </h2>\n        </Col>\n      </Row>\n      <Form>\n        <Row style={{ marginBottom: '30px' }}>\n          <Col>\n            <FormGroup>\n              <Label for=\"confirm-name\" style={{ marginBottom: '15px' }}>\n                Confirm your name\n              </Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"confirm-name\"\n                placeholder=\"Confirm your name\"\n                onChange={event => props.nameChangeHandler(event)}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm=\"4\">\n            <FormGroup>\n              <Label for=\"confirm-initials\" style={{ marginBottom: '15px' }}>\n                Confirm your initials\n              </Label>\n              <Input\n                type=\"text\"\n                name=\"initials\"\n                id=\"confirm-initials\"\n                placeholder=\"Confirm your initials\"\n                onChange={event => props.initialsNameChangeHandler(event)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Label for=\"confirm-name\" style={{ marginBottom: '15px' }}>\n              Preview\n            </Label>\n          </Col>\n        </Row>\n        <Row style={{ marginBottom: '30px' }}>\n          <Col>\n            <FormGroup>\n              <span\n                style={{\n                  border: '12px solid #CCCCCC',\n                  background: '#ffffff',\n                  padding: '8px 15px',\n                  display: 'block',\n                  fontWeight: 'bolder',\n                  fontSize: '50px',\n                  minHeight: '132px',\n                  fontFamily: `${props.nameFont}`\n                }}\n                className=\"name-preview\"\n              >\n                {props.name}\n              </span>\n            </FormGroup>\n          </Col>\n          <Col sm=\"4\">\n            <FormGroup>\n              <span\n                style={{\n                  border: '12px solid #CCCCCC',\n                  background: '#ffffff',\n                  padding: '8px 15px',\n                  display: 'inline-block',\n                  fontWeight: 'bolder',\n                  fontSize: '50px',\n                  minHeight: '132px',\n                  minWidth: '200px',\n                  fontFamily: `${props.nameFont}`\n                }}\n                className=\"initials-preview\"\n              >\n                <div className=\"name-canvas\" ref={props.nameCanvas}></div>\n                {/* {props.initialsName} */}\n              </span>\n            </FormGroup>\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: '30px' }}>\n          <Col>\n            <p>\n              By clicking Accept and Sign, I agree that the signature wil be the\n              electric representation of my signature for all purposewhen I for\n              my agend use themon documents. Including legallybinding documnets,\n              just the same as pen and paper signature.{' '}\n            </p>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <FormGroup style={{ display: 'flex' }}>\n              <Label\n                for=\"change-font\"\n                style={{ flex: 3, marginBottom: '15px' }}\n              >\n                Change Font:\n              </Label>\n              <select\n                className=\"form-control\"\n                style={{ flex: 9 }}\n                id=\"change-font\"\n                onChange={event => props.changeFontHandler(event)}\n              >\n                <option value=\"Big Caslon\">Big Caslon</option>\n                <option value=\"Times New Roman\">Times New Roman</option>\n                <option value=\"Arial\">Arial</option>\n                <option value=\"Roboto\">Roboto</option>\n                <option value=\"Times\">Times</option>\n                <option value=\"Courier New\">Courier New</option>\n                <option value=\"Georgia\">Georgia</option>\n                <option value=\"Palatino\">Palatino</option>\n                <option value=\"Garamond\">Garamond</option>\n                <option value=\"Candara\">Candara</option>\n                <option value=\"Arial Black\">Arial Black</option>\n                <option value=\"Impact\">Impact</option>\n              </select>\n            </FormGroup>\n          </Col>\n          <Col sm=\"4\">\n            <FormGroup>\n              <Button color=\"primary\" style={{ float: 'right' }}>\n                Accept and Sign\n              </Button>\n            </FormGroup>\n          </Col>\n        </Row>\n      </Form>\n    </>\n  );\n};\n\nexport default typeItIn;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}