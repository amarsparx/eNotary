{"version":3,"file":"static/webpack/static/development/pages/index.js.7a02aa3ae15082ef9cc7.hot-update.js","sources":["webpack:///./components/typeItIn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/index.js"],"sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nclass TypeItIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      initialsName: '',\n      nameFont: ''\n    };\n  }\n  render() {\n    return (\n      <>\n        <Row>\n          <Col sm=\"12\">\n            <h2 className=\"text-center\" style={{ marginBottom: '30px' }}>\n              Create your Signature\n            </h2>\n          </Col>\n        </Row>\n        <Form>\n          <Row style={{ marginBottom: '30px' }}>\n            <Col>\n              <FormGroup>\n                <Label for=\"confirm-name\" style={{ marginBottom: '15px' }}>\n                  Confirm your name\n                </Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"confirm-name\"\n                  placeholder=\"Confirm your name\"\n                  onChange={event => nameChangeHandler(event)}\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"4\">\n              <FormGroup>\n                <Label for=\"confirm-initials\" style={{ marginBottom: '15px' }}>\n                  Confirm your initials\n                </Label>\n                <Input\n                  type=\"text\"\n                  name=\"initials\"\n                  id=\"confirm-initials\"\n                  placeholder=\"Confirm your initials\"\n                  onChange={event => initialsNameChangeHandler(event)}\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Label for=\"confirm-name\" style={{ marginBottom: '15px' }}>\n                Preview\n              </Label>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '30px' }}>\n            <Col>\n              <FormGroup>\n                <span\n                  style={{\n                    border: '12px solid #CCCCCC',\n                    background: '#ffffff',\n                    padding: '8px 15px',\n                    display: 'block',\n                    fontWeight: 'bolder',\n                    fontSize: '50px',\n                    minHeight: '132px',\n                    fontFamily: `${this.state.nameFont}`\n                  }}\n                  className=\"name-preview\"\n                >\n                  {this.state.name}\n                </span>\n              </FormGroup>\n            </Col>\n            <Col sm=\"4\">\n              <FormGroup>\n                <span\n                  style={{\n                    border: '12px solid #CCCCCC',\n                    background: '#ffffff',\n                    padding: '8px 15px',\n                    display: 'inline-block',\n                    fontWeight: 'bolder',\n                    fontSize: '50px',\n                    minHeight: '132px',\n                    minWidth: '200px',\n                    fontFamily: `${this.state.nameFont}`\n                  }}\n                  className=\"initials-preview\"\n                >\n                  {this.state.initialsName}\n                </span>\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <p>\n                By clicking Accept and Sign, I agree that the signature wil be\n                the electric representation of my signature for all purposewhen\n                I for my agend use themon documents. Including legallybinding\n                documnets, just the same as pen and paper signature.{' '}\n              </p>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <FormGroup style={{ display: 'flex' }}>\n                <Label\n                  for=\"change-font\"\n                  style={{ flex: 3, marginBottom: '15px' }}\n                >\n                  Change Font:\n                </Label>\n                <select\n                  className=\"form-control\"\n                  style={{ flex: 9 }}\n                  id=\"change-font\"\n                  onChange={event => changeFontHandler(event)}\n                >\n                  <option value=\"Big Caslon\">Big Caslon</option>\n                  <option value=\"Times New Roman\">Times New Roman</option>\n                  <option value=\"Arial\">Arial</option>\n                  <option value=\"Roboto\">Roboto</option>\n                  <option value=\"Times\">Times</option>\n                  <option value=\"Courier New\">Courier New</option>\n                  <option value=\"Georgia\">Georgia</option>\n                  <option value=\"Palatino\">Palatino</option>\n                  <option value=\"Garamond\">Garamond</option>\n                  <option value=\"Candara\">Candara</option>\n                  <option value=\"Arial Black\">Arial Black</option>\n                  <option value=\"Impact\">Impact</option>\n                </select>\n              </FormGroup>\n            </Col>\n            <Col sm=\"4\">\n              <FormGroup>\n                <Button color=\"primary\">Accept and Sign</Button>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default TypeItIn;\n","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  TabContent,\n  TabPane,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap';\nimport classnames from 'classnames';\n\nimport Head from 'next/head';\n\nimport TypeItIn from '../components/typeItIn';\nimport DrawIt from '../components/drawIt';\n\nclass Signature extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1',\n      name: '',\n      initialsName: '',\n      nameFont: ''\n    };\n  }\n\n  toggle = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  };\n\n  nameChangeHandler = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  initialsNameChangeHandler = event => {\n    this.setState({ initialsName: event.target.value });\n  };\n\n  changeFontHandler = event => {\n    this.setState({ nameFont: event.target.value });\n  };\n  render() {\n    console.log('[name]', this.state.name);\n    return (\n      <>\n        <Head>\n          <link rel=\"stylesheet\" href=\"/static/css/bootstrap.min.css\" />\n        </Head>\n\n        <Container>\n          <Row>\n            <Col xs=\"3\">\n              <ListGroup>\n                <ListGroupItem\n                  className={classnames({\n                    active: this.state.activeTab === '1'\n                  })}\n                  onClick={() => {\n                    this.toggle('1');\n                  }}\n                  tag=\"button\"\n                >\n                  Type it in\n                </ListGroupItem>\n                <ListGroupItem\n                  tag=\"button\"\n                  className={classnames({\n                    active: this.state.activeTab === '2'\n                  })}\n                  onClick={() => {\n                    this.toggle('2');\n                  }}\n                >\n                  Draw It\n                </ListGroupItem>\n              </ListGroup>\n            </Col>\n\n            {/* Tab Content column */}\n            <Col>\n              <TabContent activeTab={this.state.activeTab}>\n                <TabPane tabId=\"1\">\n                  <TypeItIn\n                    nameChangeHandler={this.nameChangeHandler}\n                    initialsNameChangeHandler={this.initialsNameChangeHandler}\n                    changeFontHandler={this.changeFontHandler}\n                  />\n                </TabPane>\n                <TabPane tabId=\"2\">\n                  <Row style={{ marginBottom: '30px' }}>\n                    <Col sm=\"12\">\n                      <h2 className=\"text-center\">Create your Signature</h2>\n                    </Col>\n                  </Row>\n                  <DrawIt />\n                </TabPane>\n              </TabContent>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Signature;\n"],"mappings":"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","sourceRoot":""}